<?xml version="1.0"?>
<robot name="box_bot">
   <!-- Model created by : https://skfb.ly/6TW8z -->  

    <link name="camera_bot_base_link">
    </link>   


  <link name="chassis">
    <visual name="visual_chassis">
      <geometry>
        <mesh filename="package://turtle_tf_3d_ros2/meshes/camera_bot_meshes/camera_bot_scaled.dae" scale="1.0 1.0 1.0"/>
      </geometry>
      <material name="box_bot_blue"/>
    </visual>

    <collision name="collision_chassis">
      <geometry>
        <sphere radius="0.1445565"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="0.5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0008333333333333335" ixy="0" ixz="0" iyy="0.0008333333333333335" iyz="0" izz="0.0008333333333333335"/>
    </inertial>

  </link>

    <gazebo reference="chassis">
        <kp>100000.0</kp>
        <kd>100000.0</kd>
        <mu1>10.0</mu1>
        <mu2>10.0</mu2>
        <gravity>0</gravity>
    </gazebo>

    <joint name="camera_bot_base_link_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0" />
        <parent link="camera_bot_base_link" />
        <child link="chassis" />
    </joint>

    <!-- Force control -->
    <gazebo>
        <plugin filename="libgazebo_ros_force.so" name="gazebo_ros_force">
          <ros>
              <remapping>/gazebo_ros_force:=/cam_bot_force</remapping>
          </ros>
          
          <link_name>camera_bot_base_link</link_name>
          <force_frame>link</force_frame>

        </plugin>
    </gazebo>

    <gazebo>
        <plugin filename="libgazebo_ros_p3d.so" name="gazebo_ros_p3d">
          <ros>
              <remapping>/odom:=/cam_bot_odom</remapping>
          </ros>
          <update_rate>20.0</update_rate>
          <body_name>camera_bot_base_link</body_name>

        </plugin>
    </gazebo>

    <!-- <gazebo>
      <plugin name="lifting_surface" filename="libLiftDragPlugin.so">
          <air_density>10000</air_density>
          <cla>0</cla>
          <cla_stall>0</cla_stall>
          <cda>1.2535816618911175</cda>
          <cda_stall>1.4326647564469914</cda_stall>
          <alpha_stall>0</alpha_stall>
          <a0>0</a0>
          <area>0.06</area>
          <upward>0 0 1.0</upward>
          <forward>1.0 0 0</forward>
          <link_name>camera_bot_base_link</link_name>
          <cp>0 0 0</cp>
        </plugin>
    </gazebo> -->

    <!-- RGB CAMERA -->
  <link name="rgb_camera_link_frame">
  </link>

    <joint name="rgb_camera_link_frame_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0.2 0.0 0"/>
        <parent link="chassis" />
        <child link="rgb_camera_link_frame" />
        <axis xyz="0 0 0"/>
    </joint>

    <gazebo reference="rgb_camera_link_frame">
        <sensor name="camera" type="wideanglecamera">
          <camera>
            <horizontal_fov>3.1416</horizontal_fov>
            <image>
              <width>320</width>
              <height>240</height>
            </image>
            <clip>
              <near>0.1</near>
              <far>100</far>
            </clip>
            <!-- A new section named `lens`. -->
            <lens>
              <!-- type element is mandatory -->
              <type>custom</type>
              <!-- manually defined mapping function r = c1*f*fun(theta/c2 + c3) -->
              <!-- More information here: https://en.wikipedia.org/wiki/Fisheye_lens#Mapping_function -->
              <custom_function>
                <c1>1.05</c1>
                <!-- linear scaling -->
                <c2>4</c2>
                <!-- angle scaling -->
                <f>1.0</f>
                <!-- one more scaling parameter -->
                <fun>tan</fun>
                <!-- one of sin,tan,id -->
              </custom_function>
              <!-- if it is set to `true` your horizontal FOV will ramain as defined -->
              <!-- othervise it depends on lens type and custom function, if there is one -->
              <scale_to_hfov>true</scale_to_hfov>
              <!-- clip everything that is outside of this angle -->
              <cutoff_angle>3.1415</cutoff_angle>
              <!-- resolution of the cubemap texture, the highter it is - the sharper is your image -->
              <env_texture_size>512</env_texture_size>
            </lens>
            <always_on>1</always_on>
            <update_rate>30</update_rate>
          </camera>
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <cameraName>rgb_camera</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>rgb_camera_link_frame</frameName>
            <hackBaseline>0.07</hackBaseline>
          </plugin>
        </sensor>
    </gazebo>
    

</robot>